<% provide(:title, 'Revenue by Fee Type') %>

<div class="row">
    <div class="col-xs-12 col-md-8 col-md-offset-4 col-lg-8 col-lg-offset-2 center">
        <%= render 'shared/rev_by_fee_type_expected_button_paths' %>
    </div>
</div>

<div class="chart container">
  <div class='col-xs-12 col-md-8 col-md-offset-4 col-lg-8 col-lg-offset-2'>

    <div class="row" id="revByFeeTypeExpected"></div>
    <div class="row" id="revByFeeTypeFast"></div>
    <div class="row" id="revByFeeTypeSlow"></div>
  </div>
</div>


<script type="text/javascript">

  var categoryByYear = <%= Graph.expected_year_only %>;

  $(function () {
    var mixedRevenue = <%= @mixed_expected %>;
    var contingencyRevenue = <%= @contingency_expected %>;
    var hourlyRevenue = <%= @hourly_expected %>;
    var fixedFeeRevenue = <%= @fixed_fee_expected %>;
      $('#revByFeeTypeExpected').highcharts({
          chart: {
              type: 'column'
          },
          title: {
              text: 'Expected Recovery / High Fee'
          },
          credits: {
            enabled: false
          },
          xAxis: {
              categories: categoryByYear
          },
          yAxis: {
              min: 0,
              title: {
                  text: 'Revenue'
              },
              stackLabels: {
                  enabled: false,
                  style: {
                      fontWeight: 'bold',
                      color: (Highcharts.theme && Highcharts.theme.textColor) || 'gray'
                  }
              }
          },
          legend: {
              align: 'right',
              x: -70,
              verticalAlign: 'top',
              y: 20,
              floating: true,
              backgroundColor: (Highcharts.theme && Highcharts.theme.background2) || 'white',
              borderColor: '#CCC',
              borderWidth: 1,
              shadow: false
          },
          tooltip: {
              formatter: function() {
                  return '<b>'+ this.x +'</b><br/>'+
                      this.series.name +': $'+ (this.y).formatMoney(0,'.',',') +'<br/>'+
                      'Total: $'+ (this.point.stackTotal).formatMoney(0,'.',',');
              }
          },
          plotOptions: {
              column: {
                  stacking: 'normal',
                  dataLabels: {
                      enabled: true,
                      color: (Highcharts.theme && Highcharts.theme.dataLabelsColor) || 'white',
                      style: {
                          textShadow: '0 0 3px black, 0 0 3px black'
                      }
                  }
              }
          },
          series: [{
              name: 'Continency',
              data: contingencyRevenue
          },
          {
              name: 'Mixed',
              data: mixedRevenue
          },
          {
              name: 'Hourly',
              data: hourlyRevenue
          }, {
              name: 'Fixed',
              data: fixedFeeRevenue
          }]
      });

    Number.prototype.formatMoney = function(c, d, t){
    var n = this,
        c = isNaN(c = Math.abs(c)) ? 2 : c,
        d = d == undefined ? "." : d,
        t = t == undefined ? "," : t,
        s = n < 0 ? "-" : "",
        i = parseInt(n = Math.abs(+n || 0).toFixed(c)) + "",
        j = (j = i.length) > 3 ? j % 3 : 0;
       return s + (j ? i.substr(0, j) + t : "") + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : "");
    };

  }); // Contingency, Mixed, Hourly, Fixed MEDIUM ESTIMATE


  $(function () {
    var mixedRevenue = <%= @mixed_fast %>;
    var contingencyRevenue = <%= @contingency_fast %>;
    var hourlyRevenue = <%= @hourly_fast %>;
    var fixedFeeRevenue = <%= @fixed_fee_fast %>;
      $('#revByFeeTypeFast').highcharts({
          chart: {
              type: 'column'
          },
          title: {
              text: 'Accelerated Recovery / High Fee'
          },
          credits: {
            enabled: false
          },
          xAxis: {
              categories: categoryByYear
          },
          yAxis: {
              min: 0,
              title: {
                  text: 'Revenue'
              },
              stackLabels: {
                  enabled: false,
                  style: {
                      fontWeight: 'bold',
                      color: (Highcharts.theme && Highcharts.theme.textColor) || 'gray'
                  }
              }
          },
          legend: {
              align: 'right',
              x: -70,
              verticalAlign: 'top',
              y: 20,
              floating: true,
              backgroundColor: (Highcharts.theme && Highcharts.theme.background2) || 'white',
              borderColor: '#CCC',
              borderWidth: 1,
              shadow: false
          },
          tooltip: {
              formatter: function() {
                  return '<b>'+ this.x +'</b><br/>'+
                      this.series.name +': $'+ (this.y).formatMoney(0,'.',',') +'<br/>'+
                      'Total: $'+ (this.point.stackTotal).formatMoney(0,'.',',');
              }
          },
          plotOptions: {
              column: {
                  stacking: 'normal',
                  dataLabels: {
                      enabled: true,
                      color: (Highcharts.theme && Highcharts.theme.dataLabelsColor) || 'white',
                      style: {
                          textShadow: '0 0 3px black, 0 0 3px black'
                      }
                  }
              }
          },
          series: [{
              name: 'Continency',
              data: contingencyRevenue
          },
          {
              name: 'Mixed',
              data: mixedRevenue
          },
          {
              name: 'Hourly',
              data: hourlyRevenue
          }, {
              name: 'Fixed',
              data: fixedFeeRevenue
          }]
      });

    Number.prototype.formatMoney = function(c, d, t){
    var n = this,
        c = isNaN(c = Math.abs(c)) ? 2 : c,
        d = d == undefined ? "." : d,
        t = t == undefined ? "," : t,
        s = n < 0 ? "-" : "",
        i = parseInt(n = Math.abs(+n || 0).toFixed(c)) + "",
        j = (j = i.length) > 3 ? j % 3 : 0;
       return s + (j ? i.substr(0, j) + t : "") + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : "");
    };

  });


  $(function () {
    var mixedRevenue = <%= @mixed_slow %>;
    var contingencyRevenue = <%= @contingency_slow %>;
    var hourlyRevenue = <%= @hourly_slow %>;
    var fixedFeeRevenue = <%= @fixed_fee_slow %>;
      $('#revByFeeTypeSlow').highcharts({
          chart: {
              type: 'column'
          },
          title: {
              text: 'Slow Recovery / High Fee'
          },
          credits: {
            enabled: false
          },
          xAxis: {
              categories: categoryByYear
          },
          yAxis: {
              min: 0,
              title: {
                  text: 'Revenue'
              },
              stackLabels: {
                  enabled: false,
                  style: {
                      fontWeight: 'bold',
                      color: (Highcharts.theme && Highcharts.theme.textColor) || 'gray'
                  }
              }
          },
          legend: {
              align: 'right',
              x: -70,
              verticalAlign: 'top',
              y: 20,
              floating: true,
              backgroundColor: (Highcharts.theme && Highcharts.theme.background2) || 'white',
              borderColor: '#CCC',
              borderWidth: 1,
              shadow: false
          },
          tooltip: {
              formatter: function() {
                  return '<b>'+ this.x +'</b><br/>'+
                      this.series.name +': $'+ (this.y).formatMoney(0,'.',',') +'<br/>'+
                      'Total: $'+ (this.point.stackTotal).formatMoney(0,'.',',');
              }
          },
          plotOptions: {
              column: {
                  stacking: 'normal',
                  dataLabels: {
                      enabled: true,
                      color: (Highcharts.theme && Highcharts.theme.dataLabelsColor) || 'white',
                      style: {
                          textShadow: '0 0 3px black, 0 0 3px black'
                      }
                  }
              }
          },
          series: [{
              name: 'Continency',
              data: contingencyRevenue
          },
          {
              name: 'Mixed',
              data: mixedRevenue
          },
          {
              name: 'Hourly',
              data: hourlyRevenue
          }, {
              name: 'Fixed',
              data: fixedFeeRevenue
          }]
      });

    Number.prototype.formatMoney = function(c, d, t){
    var n = this,
        c = isNaN(c = Math.abs(c)) ? 2 : c,
        d = d == undefined ? "." : d,
        t = t == undefined ? "," : t,
        s = n < 0 ? "-" : "",
        i = parseInt(n = Math.abs(+n || 0).toFixed(c)) + "",
        j = (j = i.length) > 3 ? j % 3 : 0;
       return s + (j ? i.substr(0, j) + t : "") + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : "");
    };

  });
</script>

