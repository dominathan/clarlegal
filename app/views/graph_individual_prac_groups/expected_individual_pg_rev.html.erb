<% provide(:title, Practicegroup.find_by(id: params[:id]).group_name) %>

<div class="inside-dashboard">
    <div class="container-fluid">
        <div class="row">
            <div class="col-xs-12 col-md-12 col-lg-12">


                <div class="row">
                    <div id="individualPGRevenueByYearExpected">
                    </div>
                </div>
                <div class="row">
                    <div id="individualPGRevenueByYearAccelerated">
                    </div>
                </div>
                <div class="row">
                    <div id="individualPGRevenueByYearSlow">
                    </div>
                </div>


                <div class="row">
                    <div id="individualPGRevenueByYearActual">
                    </div>
                </div>
                <div class="row">
                    <div id='expectedRevByReferralMedium'></div>
                </div>
                <div class="row">
                    <div id="revenueByPracticeGroupByFeeType"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

 $(function () {

var categoryByYear = <%= raw Graph.expected_year_only %>;
var costByYear = <%= @cost_expected %>;
var referralFee = <%= @referral_expected %>;
var revByYearHigh = <%= @high_expected %>;
var revByYearMedium = <%= @med_expected %>;
var revByYearLow = <%= @low_expected %>;
var pracGroup = "<%= raw Practicegroup.find_by(id: params[:id]).group_name %>"

  // Create the chart
  $('#individualPGRevenueByYearExpected').highcharts({
      chart: {
          type: 'column'
      },
      title: {
          text: pracGroup+" Group"
      },
      subtitle: {
          text: 'Estimated Net Fee - Expected Collection Rate'
      },
      credits: {
        enabled: false
      },
      xAxis: {
          categories: categoryByYear,
      },
      yAxis: {
          title: {
              text: 'Dollar Fee and Costs'
          }
      },
      legend: {
          enabled: true
      },
      tooltip: {
          headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
          pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
              '<td style="padding:0"><b>${point.y}</b></td></tr>',
          footerFormat: '</table>',
          shared: true,
          useHTML: true,
          positioner: function(boxWidth, boxHeight, point) {
            return {
                x: point.plotX - 40,
                y: point.plotY - 20
            };
        } //this moves the box out of the way of the category links
      },
      plotOptions: {
          column: {
              pointPadding: 0.2,
              borderWidth: 0
          }
      },
      series: [{
          name: 'Low Revenue',
          data: revByYearLow,
      },
      {
          name: 'Medium Revenue',
          data: revByYearMedium
      },
      {
          name: 'High Revenue',
          data: revByYearHigh
      },
      {
          name: 'Estimated Case Expenses',
          data: costByYear,
          color: 'red'
      },
      {
          name: 'Referral Fee',
          data: referralFee
      }],
  })
});

$(function () {

var categoryByYear = <%= raw Graph.expected_year_only %>;
var costByYear = <%= @cost_fast %>;
var referralFee = <%= @referral_fast %>;
var revByYearHigh = <%= @high_fast %>;
var revByYearMedium = <%= @med_fast %>;
var revByYearLow = <%= @low_fast %>;
var pracGroup = "<%= raw Practicegroup.find_by(id: params[:id]).group_name %>"

  // Create the chart
  $('#individualPGRevenueByYearAccelerated').highcharts({
      chart: {
          type: 'column'
      },
      title: {
          text: pracGroup+" Group"
      },
      subtitle: {
          text: 'Estimated Net Fee - Accelerated Collection Rate'
      },
      credits: {
        enabled: false
      },
      xAxis: {
          categories: categoryByYear,
      },
      yAxis: {
          title: {
              text: 'Dollar Fee and Costs'
          }
      },
      legend: {
          enabled: true
      },
      tooltip: {
          headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
          pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
              '<td style="padding:0"><b>${point.y}</b></td></tr>',
          footerFormat: '</table>',
          shared: true,
          useHTML: true,
          positioner: function(boxWidth, boxHeight, point) {
            return {
                x: point.plotX - 40,
                y: point.plotY - 20
            };
        } //this moves the box out of the way of the category links
      },
      plotOptions: {
          column: {
              pointPadding: 0.2,
              borderWidth: 0
          }
      },
      series: [{
          name: 'Low Revenue',
          data: revByYearLow,
      },
      {
          name: 'Medium Revenue',
          data: revByYearMedium
      },
      {
          name: 'High Revenue',
          data: revByYearHigh
      },
      {
          name: 'Estimated Case Expenses',
          data: costByYear,
          color: 'red'
      },
      {
          name: 'Referral Fee',
          data: referralFee
      }],
  })
});

 $(function () {

var categoryByYear = <%= raw Graph.expected_year_only %>;
var costByYear = <%= @cost_slow %>;
var referralFee = <%= @referral_slow %>;
var revByYearHigh = <%= @high_slow %>;
var revByYearMedium = <%= @med_slow %>;
var revByYearLow = <%= @low_slow %>;
var pracGroup = "<%= raw Practicegroup.find_by(id: params[:id]).group_name %>"

  // Create the chart
  $('#individualPGRevenueByYearSlow').highcharts({
      chart: {
          type: 'column'
      },
      title: {
          text: pracGroup+" Group"
      },
      subtitle: {
          text: 'Estimated Net Fee - Slow Collection Rate'
      },
      credits: {
        enabled: false
      },
      xAxis: {
          categories: categoryByYear,
      },
      yAxis: {
          title: {
              text: 'Dollar Fee and Costs'
          }
      },
      legend: {
          enabled: true
      },
      tooltip: {
          headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
          pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
              '<td style="padding:0"><b>${point.y}</b></td></tr>',
          footerFormat: '</table>',
          shared: true,
          useHTML: true,
          positioner: function(boxWidth, boxHeight, point) {
            return {
                x: point.plotX - 40,
                y: point.plotY - 20
            };
        } //this moves the box out of the way of the category links
      },
      plotOptions: {
          column: {
              pointPadding: 0.2,
              borderWidth: 0
          }
      },
      series: [{
          name: 'Low Revenue',
          data: revByYearLow,
      },
      {
          name: 'Medium Revenue',
          data: revByYearMedium
      },
      {
          name: 'High Revenue',
          data: revByYearHigh
      },
      {
          name: 'Estimated Case Expenses',
          data: costByYear,
          color: 'red'
      },
      {
          name: 'Referral Fee',
          data: referralFee
      }],
  })
});
$(function () {

var categoryByYearBackwards = <%= raw Graph.closeout_year_only %>;
var totalRecovery = <%= @total_recovery %>;
var grossFeeReceived = <%= @gross_fee_received %>;
var outOfPocketExpenses = <%= @out_of_pocket %>;
var referringFeesPaid = <%= @referring_fees %>;
var totalFeeReceived = <%= @total_fee_received %>;
var pracGroup = "<%= raw Practicegroup.find_by(id: params[:id]).group_name %>";


  // Create the chart
  $('#individualPGRevenueByYearActual').highcharts({
      chart: {
          type: 'column'
      },
      title: {
          text: pracGroup+" Group"
      },
      subtitle: {
          text: 'Actual Net Fee'
      },
      credits: {
        enabled: false
      },
      xAxis: {
          categories: categoryByYearBackwards,
      },
      yAxis: {
          title: {
              text: 'Actual Fees and Expenses'
          }
      },
      legend: {
          enabled: true
      },
      tooltip: {
          headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
          pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
              '<td style="padding:0"><b>${point.y}</b></td></tr>',
          footerFormat: '</table>',
          shared: true,
          useHTML: true,
          positioner: function(boxWidth, boxHeight, point) {
            return {
                x: point.plotX - 40,
                y: point.plotY - 20
            };
        } //this moves the box out of the way of the category links
      },
      plotOptions: {
          column: {
              pointPadding: 0.2,
              borderWidth: 0
          }
      },
      series: [{
          name: 'Total Recovery',
          data: totalRecovery,
      },
      {
          name: 'Gross Fee Received',
          data: grossFeeReceived
      },
      {
          name: 'Out-of-Pocket Expenses',
          data: outOfPocketExpenses
      },
      {
          name: 'Referring Fees Paid',
          data: referringFeesPaid,
          color: 'red'
      },
      {
          name: 'Total Fee Received',
          data: totalFeeReceived
      }],
  })
});
$(function () {

  var pracGroup = "<%= raw Practicegroup.find_by(id: params[:id]).group_name %>";
  var pieDataOriginationMedium = [<% @origination_source_med.each do |d| %>
                      <%= raw d %>,
                    <% end %>];

    $('#expectedRevByReferralMedium').highcharts({
        chart: {
            plotBackgroundColor: null,
            plotBorderWidth: null,
            plotShadow: false
        },
        title: {
            text: "Expected Fee Received By Referral Source for "+ pracGroup
        },
        tooltip: {
              pointFormat: '<b>${point.y}</b>'
        },
        credits: {
            enabled: false
        },
        plotOptions: {
            pie: {
                allowPointSelect: true,
                cursor: 'pointer',
                dataLabels: {
                    enabled: true,
                    pointFormat: '<b>{point.name}: ${point.y}</b>',
                    style: {
                        color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'
                    },
                    connectorColor: 'silver'
                }
            }
        },
        series: [{
            type: 'pie',
            name: "Practice Group",
            data: pieDataOriginationMedium
        }]
    });
});

$(function () {
    var categoryByYear = <%= raw Graph.expected_year_only %>;
    var seriesData = <%= raw @fee_types_med %>;
      $('#revenueByPracticeGroupByFeeType').highcharts({
          chart: {
              type: 'column'
          },
          title: {
              text: 'Expected Fee Received By Fee Type'
          },
          credits: {
            enabled: false
          },
          xAxis: {
              categories: categoryByYear
          },
          yAxis: {
              min: 0,
              title: {
                  text: 'Revenue'
              },
              stackLabels: {
                  enabled: false,
                  style: {
                      fontWeight: 'bold',
                      color: (Highcharts.theme && Highcharts.theme.textColor) || 'gray'
                  }
              }
          },
          legend: {
              align: 'right',
              x: -70,
              verticalAlign: 'top',
              y: 20,
              floating: true,
              backgroundColor: (Highcharts.theme && Highcharts.theme.background2) || 'white',
              borderColor: '#CCC',
              borderWidth: 1,
              shadow: false
          },
          tooltip: {
              formatter: function() {
                  return '<b>'+ this.x +'</b><br/>'+
                      this.series.name +': $'+ (this.y).formatMoney(0,'.',',') +'<br/>'+
                      'Total: $'+ (this.point.stackTotal).formatMoney(0,'.',',');
              }
          },
          plotOptions: {
              column: {
                  stacking: 'normal',
                  dataLabels: {
                      enabled: true,
                      color: (Highcharts.theme && Highcharts.theme.dataLabelsColor) || 'white',
                      style: {
                          textShadow: '0 0 3px black, 0 0 3px black'
                      }
                  }
              }
          },
        series: seriesData
      });

    Number.prototype.formatMoney = function(c, d, t){
    var n = this,
        c = isNaN(c = Math.abs(c)) ? 2 : c,
        d = d == undefined ? "." : d,
        t = t == undefined ? "," : t,
        s = n < 0 ? "-" : "",
        i = parseInt(n = Math.abs(+n || 0).toFixed(c)) + "",
        j = (j = i.length) > 3 ? j % 3 : 0;
       return s + (j ? i.substr(0, j) + t : "") + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : "");
     }


});

</script>
